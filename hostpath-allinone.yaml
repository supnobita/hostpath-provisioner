---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hostpath-provisioner

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hostpath-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-hostpath-provisioner
subjects:
  - kind: ServiceAccount
    name: hostpath-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: hostpath-provisioner-runner
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hostpath-provisioner
  labels:
    k8s-app: dynamic-provisioner
spec:
  selector:
    matchLabels:
      name: hostpath-provisioner
  template:
    metadata:
      labels:
        name: hostpath-provisioner
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccountName: hostpath-provisioner
      containers:
      - name: hostpath-provisioner
        image: docker.io/supnobita/hostpath-provisioner:data
        imagePullPolicy: "IfNotPresent"
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - name: pv-volume
            mountPath: /data
      volumes:
        - name: pv-volume
          hostPath:
            path: /data
      terminationGracePeriodSeconds: 30
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hostpath
  annotations:
    volume.beta.kubernetes.io/storage-class: "hostpath"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: hostpath
provisioner: mfs/hostpath
